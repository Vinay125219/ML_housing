name: Enhanced MLOps CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: "0 2 * * *"

concurrency: ci-${{ github.ref }}

permissions:
  contents: read
  security-events: write

env:
  PYTHON_VERSION: "3.10"
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: mlops-housing-pipeline

jobs:
  # [Existing code-quality, validation-testing, docker-build-push, security-scan jobs remain unchanged]

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [docker-build-push, security-scan]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull latest image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/mlops-housing-pipeline:latest

      - name: Create deployment script
        run: |
          cat > deploy.sh << 'EOF'
          #!/bin/bash
          set -e

          echo "🚀 Starting MLOps Pipeline Deployment"

          # Stop existing containers
          echo "🛑 Stopping existing containers..."
          docker-compose -f docker-compose.monitoring.yml down || true

          # Pull latest images (already done in workflow, but safe to include)
          echo "📥 Pulling latest Docker images..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/mlops-housing-pipeline:latest

          # Start services
          echo "🚀 Starting services..."
          docker-compose -f docker-compose.monitoring.yml up -d

          # Wait for services to be ready
          echo "⏳ Waiting for services to be ready..."
          sleep 30

          # Health checks
          echo "🏥 Running health checks..."
          curl -f http://localhost:8000/health || exit 1

          echo "✅ Deployment completed successfully!"
          echo "🌐 Services available at:"
          echo "  - Housing API: http://localhost:8000/docs"
          echo "  - Grafana: http://localhost:3001"
          echo "  - MLflow: http://localhost:5000"
          EOF

          chmod +x deploy.sh

      - name: Execute deployment
        run: ./deploy.sh

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-scripts
          path: |
            deploy.sh
            docker-compose.monitoring.yml